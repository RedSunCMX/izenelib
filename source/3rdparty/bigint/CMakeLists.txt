MACRO_CHECK_SHOULD_BUILD(bigint)

  STRING(TOUPPER "${CMAKE_SYSTEM_NAME}" UPPER_SYSTEM_NAME)
  IF(WIN32)
    SET(bigint_DEFINITIONS "-DWIN32")
    IF(MINGW)
      SET(bigint_DEFINITIONS "${bigint_DEFINITIONS} -D__MINGW__")
    ENDIF(MINGW)
  ELSEIF(UPPER_SYSTEM_NAME STREQUAL "UNIX")
    SET(bigint_DEFINITIONS "-DUNIX")
  ELSEIF(UPPER_SYSTEM_NAME STREQUAL "LINUX")
    SET(bigint_DEFINITIONS "-DLINUX")
  ELSE(WIN32)
    SET(bigint_DEFINITIONS)
  ENDIF(WIN32)

  IF(CMAKE_SYSTEM_PROCESSOR MATCHES "i[0-9]?86")
    SET(bigint_DEFINITIONS "${bigint_DEFINITIONS} -DIA32")
  ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
    SET(bigint_DEFINITIONS "${bigint_DEFINITIONS} -DAMD64")
  ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "powerpc")
    SET(bigint_DEFINITIONS "${bigint_DEFINITIONS} -mcpu=powerpc")
  ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "sparc")
    SET(bigint_DEFINITIONS "${bigint_DEFINITIONS} -mcpu=sparc")
  ENDIF(CMAKE_SYSTEM_PROCESSOR MATCHES "i[0-9]?86")

  INCLUDE(TestBigEndian)
  TEST_BIG_ENDIAN(ARCH_IS_BIG_ENDIAN)
  IF(DEFINED ARCH_IS_BIG_ENDIAN)
    IF(ARCH_IS_BIG_ENDIAN)
      SET(bigint_DEFINITIONS "${bigint_DEFINITIONS} -DARCH_IS_BIG_ENDIAN=1")
    ELSE(ARCH_IS_BIG_ENDIAN)
      SET(bigint_DEFINITIONS "${bigint_DEFINITIONS} -DARCH_IS_BIG_ENDIAN=0")
    ENDIF(ARCH_IS_BIG_ENDIAN)
  ENDIF(DEFINED ARCH_IS_BIG_ENDIAN)

  MESSAGE(STATUS "bigint_DEFINITIONS=${bigint_DEFINITIONS}")
  ADD_DEFINITIONS("${bigint_DEFINITIONS}")


IF(bigint_SHOULD_BUILD)

  SET(bigint_SRC
     BigIntegerAlgorithms.cpp
     BigUnsigned.cpp
     BigInteger.cpp
     BigUnsignedInABase.cpp
     BigIntegerUtils.cpp
    )

  ADD_LIBRARY(bigint ${bigint_SRC})
  TARGET_LINK_LIBRARIES(bigint ${CMAKE_THREAD_LIBS_INIT})
  INSTALL(TARGETS bigint DESTINATION lib)

ENDIF(bigint_SHOULD_BUILD)
