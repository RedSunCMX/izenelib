IF(ENABLE_LIBICONV)

  STRING(TOUPPER "${CMAKE_SYSTEM_NAME}" UPPER_SYSTEM_NAME)

  IF(WIN32)
    SET(libiconv_DEFINITIONS "-DWIN32")
    IF(MINGW)
      SET(libiconv_DEFINITIONS "${libiconv_DEFINITIONS} -D__MINGW__")
    ENDIF(MINGW)
  ELSEIF(UPPER_SYSTEM_NAME STREQUAL "UNIX")
    SET(libiconv_DEFINITIONS "-DUNIX")
  ELSEIF(UPPER_SYSTEM_NAME STREQUAL "LINUX")
    SET(libiconv_DEFINITIONS "-DLINUX")
  ELSE(WIN32)
    SET(libiconv_DEFINITIONS)
  ENDIF(WIN32)

  IF(CMAKE_SYSTEM_PROCESSOR MATCHES "i[0-9]?86")
    SET(libiconv_DEFINITIONS "${libiconv_DEFINITIONS} -DIA32")
  ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
    SET(libiconv_DEFINITIONS "${libiconv_DEFINITIONS} -DAMD64")
  ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "powerpc")
    SET(libiconv_DEFINITIONS "${libiconv_DEFINITIONS} -mcpu=powerpc")
  ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "sparc")
    SET(libiconv_DEFINITIONS "${libiconv_DEFINITIONS} -mcpu=sparc")
  ENDIF(CMAKE_SYSTEM_PROCESSOR MATCHES "i[0-9]?86")

  MESSAGE(STATUS "libiconv_DEFINITIONS=${libiconv_DEFINITIONS}")
  ADD_DEFINITIONS("${libiconv_DEFINITIONS}")

  SET_PROPERTY(GLOBAL APPEND PROPERTY BUILD_COMPONENTS libiconv)

  SET(libiconv_SRC
    iconv.c
    localcharset.c
    relocatable.c)

  INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include/3rdparty/libiconv-1.13)

  ADD_LIBRARY(libiconv_shared SHARED ${libiconv_SRC})
  SET_TARGET_PROPERTIES(libiconv_shared PROPERTIES
    OUTPUT_NAME "iconv"
    CLEAN_DIRECT_OUTPUT 1
    VERSION ${PROJECT_VERSION}
    )

  ADD_LIBRARY(libiconv_static STATIC ${libiconv_SRC})
  SET_TARGET_PROPERTIES(libiconv_static PROPERTIES
    OUTPUT_NAME "iconv"
    CLEAN_DIRECT_OUTPUT 1
    )

ELSE(ENABLE_LIBICONV)

  SET_PROPERTY(GLOBAL APPEND PROPERTY NON_BUILD_COMPONENTS libiconv)
  MESSAGE(STATUS "! WARNING: Because mirgrated libiconv is not portable, it is disabled by default, use -DENABLE_LIBICONV=1 to enable it")

ENDIF(ENABLE_LIBICONV)