IF(Threads_FOUND)

  STRING(TOUPPER "${CMAKE_SYSTEM_NAME}" UPPER_SYSTEM_NAME)
  IF(WIN32)
    SET(udt_DEFINITIONS "-DWIN32")
    IF(MINGW)
      SET(udt_DEFINITIONS "${udt_DEFINITIONS} -D__MINGW__")
    ENDIF(MINGW)
  ELSEIF(UPPER_SYSTEM_NAME STREQUAL "UNIX")
    SET(udt_DEFINITIONS "-DUNIX")
  ELSEIF(UPPER_SYSTEM_NAME STREQUAL "LINUX")
    SET(udt_DEFINITIONS "-DLINUX")
  ELSE(WIN32)
    SET(udt_DEFINITIONS)
  ENDIF(WIN32)

  IF(CMAKE_SYSTEM_PROCESSOR MATCHES "i[0-9]?86")
    SET(udt_DEFINITIONS "${udt_DEFINITIONS} -DIA32")
  ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
    SET(udt_DEFINITIONS "${udt_DEFINITIONS} -DAMD64")
  ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "powerpc")
    SET(udt_DEFINITIONS "${udt_DEFINITIONS} -mcpu=powerpc")
  ELSEIF(CMAKE_SYSTEM_PROCESSOR MATCHES "sparc")
    SET(udt_DEFINITIONS "${udt_DEFINITIONS} -mcpu=sparc")
  ENDIF(CMAKE_SYSTEM_PROCESSOR MATCHES "i[0-9]?86")

  INCLUDE(TestBigEndian)
  TEST_BIG_ENDIAN(ARCH_IS_BIG_ENDIAN)
  IF(DEFINED ARCH_IS_BIG_ENDIAN)
    IF(ARCH_IS_BIG_ENDIAN)
      SET(udt_DEFINITIONS "${udt_DEFINITIONS} -DARCH_IS_BIG_ENDIAN=1")
    ELSE(ARCH_IS_BIG_ENDIAN)
      SET(udt_DEFINITIONS "${udt_DEFINITIONS} -DARCH_IS_BIG_ENDIAN=0")
    ENDIF(ARCH_IS_BIG_ENDIAN)
  ENDIF(DEFINED ARCH_IS_BIG_ENDIAN)
  
  MESSAGE(STATUS "udt_DEFINITIONS=${udt_DEFINITIONS}")
  ADD_DEFINITIONS("${udt_DEFINITIONS}")

  SET_PROPERTY(GLOBAL APPEND PROPERTY BUILD_COMPONENTS udt)

  SET(udt_SRC
    api.cpp
    buffer.cpp
    cache.cpp
    ccc.cpp
    channel.cpp
    common.cpp
    core.cpp
    list.cpp
    md5.cpp
    packet.cpp
    queue.cpp
    window.cpp
    )

  MACRO_ADD_COMPONENT(udt "${VERSION_INSTALL_PREFIX}" "${PROJECT_VERSION}" ${udt_SRC})
  TARGET_LINK_LIBRARIES(udt_shared ${CMAKE_THREAD_LIBS_INIT})
  TARGET_LINK_LIBRARIES(udt_static ${CMAKE_THREAD_LIBS_INIT})

  # we know the warnings, it's ok to alias void* as char*
  IF(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_COMPILER_IS_GNUC)
    SET_TARGET_PROPERTIES(udt_static PROPERTIES
      COMPILE_FLAGS "-Wno-strict-aliasing"
      )
    SET_TARGET_PROPERTIES(udt_shared PROPERTIES
      COMPILE_FLAGS "-Wno-strict-aliasing"
      )
  ENDIF(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_COMPILER_IS_GNUC)

ELSE(Threads_FOUND)

  SET_PROPERTY(GLOBAL APPEND PROPERTY NON_BUILD_COMPONENTS udt)
  MESSAGE(STATUS "! WARNING: udt cannot been built without a thread library (e.g. pthread in Linux)")

ENDIF(Threads_FOUND)