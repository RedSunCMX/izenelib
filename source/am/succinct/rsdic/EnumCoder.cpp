/*
 *  Copyright (c) 2012 Daisuke Okanohara
 *
 *   Redistribution and use in source and binary forms, with or without
 *   modification, are permitted provided that the following conditions
 *   are met:
 *
 *   1. Redistributions of source code must retain the above Copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *   2. Redistributions in binary form must reproduce the above Copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *
 *   3. Neither the name of the authors nor the names of its contributors
 *      may be used to endorse or promote products derived from this
 *      software without specific prior written permission.
 */

#include <am/succinct/rsdic/EnumCoder.hpp>
#include <am/succinct/utils.hpp>


NS_IZENELIB_AM_BEGIN

namespace succinct
{
namespace rsdic
{

uint64_t EnumCoder::Encode(uint64_t val, size_t rank_sb)
{
    if (rank_sb == 0 || rank_sb == kBlockSize) return 0;

    rank_sb = rank_sb > 32 ? (val = ~val, kBlockSize - rank_sb) : rank_sb;

    uint64_t code = 0;
    for (size_t i = 0; i < kBlockSize; ++i)
    {
        if (val >> i & 1LLU)
        {
            code += kCombinationTable64_[rank_sb][kBlockSize - i - 1];
            --rank_sb;
        }
    }

    return code;
}

uint64_t EnumCoder::Decode(uint64_t code, size_t rank_sb)
{
    if (rank_sb == 0) return 0;
    else if (rank_sb == kBlockSize) return (uint64_t)-1;

    size_t orig_rank_sb = rank_sb;
    rank_sb = rank_sb > 32 ? kBlockSize - rank_sb : rank_sb;

    uint64_t val = 0;
    for (size_t i = 0; i < kBlockSize; ++i)
    {
        uint64_t zero_case_num = kCombinationTable64_[rank_sb][kBlockSize - i - 1];
        if (code >= zero_case_num)
        {
            val |= 1LLU << i;
            code -= zero_case_num;
            if (--rank_sb == 0) break;
        }
    }

    return orig_rank_sb <= 32 ? val : ~val;
}

bool EnumCoder::GetBit(uint64_t code, size_t rank_sb, size_t pos)
{
    if (rank_sb == 0) return false;
    else if (rank_sb == kBlockSize) return true;
    else if (Len(rank_sb) == kBlockSize) return code >> pos & 1LLU;

    size_t orig_rank_sb = rank_sb;
    rank_sb = rank_sb > 32 ? kBlockSize - rank_sb : rank_sb;

    for (size_t i = 0; i < pos; ++i)
    {
        uint64_t zero_case_num = kCombinationTable64_[rank_sb][kBlockSize - i - 1];
        if (code >= zero_case_num)
        {
            code -= zero_case_num;
            --rank_sb;
        }
    }

    return orig_rank_sb <= 32
        ? code >= kCombinationTable64_[rank_sb][kBlockSize - pos - 1]
        : code < kCombinationTable64_[rank_sb][kBlockSize - pos - 1];
}

bool EnumCoder::GetBit(uint64_t code, size_t rank_sb, size_t pos, size_t& rank)
{
    if (rank_sb == 0)
    {
        rank = 0;
        return false;
    }
    else if (rank_sb == kBlockSize)
    {
        rank = pos;
        return true;
    }
    else if (Len(rank_sb) == kBlockSize)
    {
        rank = SuccinctUtils::popcount(code & ((1LLU << pos) - 1));
        return code >> pos & 1LLU;
    }

    size_t orig_rank_sb = rank_sb;
    rank_sb = rank_sb > 32 ? kBlockSize - rank_sb : rank_sb;

    rank = rank_sb;
    for (size_t i = 0; i < pos; ++i)
    {
        uint64_t zero_case_num = kCombinationTable64_[rank_sb][kBlockSize - i - 1];
        if (code >= zero_case_num)
        {
            code -= zero_case_num;
            --rank_sb;
        }
    }

    if (orig_rank_sb <= 32)
    {
        rank -= rank_sb;
        return code >= kCombinationTable64_[rank_sb][kBlockSize - pos - 1];
    }
    else
    {
        rank = pos - rank + rank_sb;
        return code < kCombinationTable64_[rank_sb][kBlockSize - pos - 1];
    }
}

size_t EnumCoder::Rank(uint64_t code, size_t rank_sb, size_t pos)
{
    if (rank_sb == 0) return 0;
    else if (rank_sb == kBlockSize) return pos;
    else if (Len(rank_sb) == kBlockSize) return SuccinctUtils::popcount(code & ((1LLU << pos) - 1));

    size_t orig_rank_sb = rank_sb;
    rank_sb = rank_sb > 32 ? kBlockSize - rank_sb : rank_sb;

    size_t cur_rank = rank_sb;
    for (size_t i = 0; i < pos; ++i)
    {
        uint64_t zero_case_num = kCombinationTable64_[cur_rank][kBlockSize - i - 1];
        if (code >= zero_case_num)
        {
            code -= zero_case_num;
            --cur_rank;
        }
    }

    return orig_rank_sb <= 32 ? rank_sb - cur_rank : pos - rank_sb + cur_rank;
}

size_t EnumCoder::Select0Enum_(uint64_t code, size_t rank_sb, size_t num)
{
    rank_sb = kBlockSize - rank_sb;
    for (size_t offset = 0; offset < kBlockSize; ++offset)
    {
        uint64_t zero_case_num = kCombinationTable64_[rank_sb][kBlockSize - offset - 1];
        if (code >= zero_case_num)
        {
            code -= zero_case_num;
            --rank_sb;
        }
        else
        {
            if (num == 0) return offset;
            --num;
        }
    }

    __assert(false);
    return 0;
}

size_t EnumCoder::Select1Enum_(uint64_t code, size_t rank_sb, size_t num)
{
    for (size_t offset = 0; offset < kBlockSize; ++offset)
    {
        uint64_t zero_case_num = kCombinationTable64_[rank_sb][kBlockSize - offset - 1];
        if (code >= zero_case_num)
        {
            if (num == 0) return offset;
            --num;
            code -= zero_case_num;
            --rank_sb;
        }
    }

    __assert(false);
    return 0;
}

size_t EnumCoder::Select0(uint64_t code, size_t rank_sb, size_t num)
{
    __assert(num < rank_sb);

    if (rank_sb == kBlockSize)
    {
        return num;
    }
    else if (Len(rank_sb) == kBlockSize)
    {
        return SuccinctUtils::selectBlock(~code, num);
    }
    else
    {
        return rank_sb > 32 ? Select0Enum_(code, rank_sb, num) : Select1Enum_(code, rank_sb, num);
    }
}

size_t EnumCoder::Select1(uint64_t code, size_t rank_sb, size_t num)
{
    __assert(num < rank_sb);

    if (rank_sb == kBlockSize)
    {
        return num;
    }
    else if (Len(rank_sb) == kBlockSize)
    {
        return SuccinctUtils::selectBlock(code, num);
    }
    else
    {
        return rank_sb <= 32 ? Select1Enum_(code, rank_sb, num) : Select0Enum_(code, rank_sb, num);
    }
}

size_t EnumCoder::Select(uint64_t code, size_t rank_sb, size_t num, bool bit)
{
    if (bit) return Select1(code, rank_sb, num);
    else return Select0(code, rank_sb, num);
}

const uint8_t EnumCoder::kEnumCodeLength_[65] =
{
    0,  6,  11, 16, 20, 23, 27, 30, 33, 35, 38, 40, 42, 44, 46, 64,
    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
    64, 64, 46, 44, 42, 40, 38, 35, 33, 30, 27, 23, 20, 16, 11, 6,
    0
};

const uint64_t EnumCoder::kCombinationTable64_[33][64] =
{
    { 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU, 1LLU },
    { 0LLU, 1LLU, 2LLU, 3LLU, 4LLU, 5LLU, 6LLU, 7LLU, 8LLU, 9LLU, 10LLU, 11LLU, 12LLU, 13LLU, 14LLU, 15LLU, 16LLU, 17LLU, 18LLU, 19LLU, 20LLU, 21LLU, 22LLU, 23LLU, 24LLU, 25LLU, 26LLU, 27LLU, 28LLU, 29LLU, 30LLU, 31LLU, 32LLU, 33LLU, 34LLU, 35LLU, 36LLU, 37LLU, 38LLU, 39LLU, 40LLU, 41LLU, 42LLU, 43LLU, 44LLU, 45LLU, 46LLU, 47LLU, 48LLU, 49LLU, 50LLU, 51LLU, 52LLU, 53LLU, 54LLU, 55LLU, 56LLU, 57LLU, 58LLU, 59LLU, 60LLU, 61LLU, 62LLU, 63LLU },
    { 0LLU, 0LLU, 1LLU, 3LLU, 6LLU, 10LLU, 15LLU, 21LLU, 28LLU, 36LLU, 45LLU, 55LLU, 66LLU, 78LLU, 91LLU, 105LLU, 120LLU, 136LLU, 153LLU, 171LLU, 190LLU, 210LLU, 231LLU, 253LLU, 276LLU, 300LLU, 325LLU, 351LLU, 378LLU, 406LLU, 435LLU, 465LLU, 496LLU, 528LLU, 561LLU, 595LLU, 630LLU, 666LLU, 703LLU, 741LLU, 780LLU, 820LLU, 861LLU, 903LLU, 946LLU, 990LLU, 1035LLU, 1081LLU, 1128LLU, 1176LLU, 1225LLU, 1275LLU, 1326LLU, 1378LLU, 1431LLU, 1485LLU, 1540LLU, 1596LLU, 1653LLU, 1711LLU, 1770LLU, 1830LLU, 1891LLU, 1953LLU },
    { 0LLU, 0LLU, 0LLU, 1LLU, 4LLU, 10LLU, 20LLU, 35LLU, 56LLU, 84LLU, 120LLU, 165LLU, 220LLU, 286LLU, 364LLU, 455LLU, 560LLU, 680LLU, 816LLU, 969LLU, 1140LLU, 1330LLU, 1540LLU, 1771LLU, 2024LLU, 2300LLU, 2600LLU, 2925LLU, 3276LLU, 3654LLU, 4060LLU, 4495LLU, 4960LLU, 5456LLU, 5984LLU, 6545LLU, 7140LLU, 7770LLU, 8436LLU, 9139LLU, 9880LLU, 10660LLU, 11480LLU, 12341LLU, 13244LLU, 14190LLU, 15180LLU, 16215LLU, 17296LLU, 18424LLU, 19600LLU, 20825LLU, 22100LLU, 23426LLU, 24804LLU, 26235LLU, 27720LLU, 29260LLU, 30856LLU, 32509LLU, 34220LLU, 35990LLU, 37820LLU, 39711LLU },
    { 0LLU, 0LLU, 0LLU, 0LLU, 1LLU, 5LLU, 15LLU, 35LLU, 70LLU, 126LLU, 210LLU, 330LLU, 495LLU, 715LLU, 1001LLU, 1365LLU, 1820LLU, 2380LLU, 3060LLU, 3876LLU, 4845LLU, 5985LLU, 7315LLU, 8855LLU, 10626LLU, 12650LLU, 14950LLU, 17550LLU, 20475LLU, 23751LLU, 27405LLU, 31465LLU, 35960LLU, 40920LLU, 46376LLU, 52360LLU, 58905LLU, 66045LLU, 73815LLU, 82251LLU, 91390LLU, 101270LLU, 111930LLU, 123410LLU, 135751LLU, 148995LLU, 163185LLU, 178365LLU, 194580LLU, 211876LLU, 230300LLU, 249900LLU, 270725LLU, 292825LLU, 316251LLU, 341055LLU, 367290LLU, 395010LLU, 424270LLU, 455126LLU, 487635LLU, 521855LLU, 557845LLU, 595665LLU },
    { 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 1LLU, 6LLU, 21LLU, 56LLU, 126LLU, 252LLU, 462LLU, 792LLU, 1287LLU, 2002LLU, 3003LLU, 4368LLU, 6188LLU, 8568LLU, 11628LLU, 15504LLU, 20349LLU, 26334LLU, 33649LLU, 42504LLU, 53130LLU, 65780LLU, 80730LLU, 98280LLU, 118755LLU, 142506LLU, 169911LLU, 201376LLU, 237336LLU, 278256LLU, 324632LLU, 376992LLU, 435897LLU, 501942LLU, 575757LLU, 658008LLU, 749398LLU, 850668LLU, 962598LLU, 1086008LLU, 1221759LLU, 1370754LLU, 1533939LLU, 1712304LLU, 1906884LLU, 2118760LLU, 2349060LLU, 2598960LLU, 2869685LLU, 3162510LLU, 3478761LLU, 3819816LLU, 4187106LLU, 4582116LLU, 5006386LLU, 5461512LLU, 5949147LLU, 6471002LLU, 7028847LLU },
    {},
    {},
    {},
    { 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 1LLU, 10LLU, 55LLU, 220LLU, 715LLU, 2002LLU, 5005LLU, 11440LLU, 24310LLU, 48620LLU, 92378LLU, 167960LLU, 293930LLU, 497420LLU, 817190LLU, 1307504LLU, 2042975LLU, 3124550LLU, 4686825LLU, 6906900LLU, 10015005LLU, 14307150LLU, 20160075LLU, 28048800LLU, 38567100LLU, 52451256LLU, 70607460LLU, 94143280LLU, 124403620LLU, 163011640LLU, 211915132LLU, 273438880LLU, 350343565LLU, 445891810LLU, 563921995LLU, 708930508LLU, 886163135LLU, 1101716330LLU, 1362649145LLU, 1677106640LLU, 2054455634LLU, 2505433700LLU, 3042312350LLU, 3679075400LLU, 4431613550LLU, 5317936260LLU, 6358402050LLU, 7575968400LLU, 8996462475LLU, 10648873950LLU, 12565671261LLU, 14783142660LLU, 17341763505LLU, 20286591270LLU, 23667689815LLU },
    {},
    {},
    { 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 1LLU, 13LLU, 91LLU, 455LLU, 1820LLU, 6188LLU, 18564LLU, 50388LLU, 125970LLU, 293930LLU, 646646LLU, 1352078LLU, 2704156LLU, 5200300LLU, 9657700LLU, 17383860LLU, 30421755LLU, 51895935LLU, 86493225LLU, 141120525LLU, 225792840LLU, 354817320LLU, 548354040LLU, 834451800LLU, 1251677700LLU, 1852482996LLU, 2707475148LLU, 3910797436LLU, 5586853480LLU, 7898654920LLU, 11058116888LLU, 15338678264LLU, 21090682613LLU, 28760021745LLU, 38910617655LLU, 52251400851LLU, 69668534468LLU, 92263734836LLU, 121399651100LLU, 158753389900LLU, 206379406870LLU, 266783135710LLU, 343006888770LLU, 438729741450LLU, 558383307300LLU, 707285522580LLU, 891794789340LLU, 1119487075980LLU, 1399358844975LLU, 1742058970275LLU, 2160153123141LLU, 2668424446233LLU },
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    { 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 0LLU, 1LLU, 26LLU, 351LLU, 3276LLU, 23751LLU, 142506LLU, 736281LLU, 3365856LLU, 13884156LLU, 52451256LLU, 183579396LLU, 600805296LLU, 1852482996LLU, 5414950296LLU, 15084504396LLU, 40225345056LLU, 103077446706LLU, 254661927156LLU, 608359048206LLU, 1408831480056LLU, 3169870830126LLU, 6943526580276LLU, 14833897694226LLU, 30957699535776LLU, 63205303218876LLU, 126410606437752LLU, 247959266474052LLU, 477551179875952LLU, 903936161908052LLU, 1683191473897752LLU, 3085851035479212LLU, 5574440580220512LLU, 9929472283517787LLU, 17451799771031262LLU, 30284005485024837LLU, 51915437974328292LLU, 87967825456500717LLU, 147405545359541742LLU, 244382877832924467LLU },
    {},
    {},
    {},
    {},
    {},
    {},
    {}
};

}
}

NS_IZENELIB_AM_END
