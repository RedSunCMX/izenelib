SET(PACKAGE_VERSION "@PROJECT_VERSION@")
SET(PACKAGE_VERSION_MAJOR "@PROJECT_VERSION_MAJOR@")
SET(PACKAGE_VERSION_MINOR "@PROJECT_VERSION_MINOR@")
SET(PACKAGE_VERSION_PATCH "@PROJECT_VERSION_PATCH@")
SET(PACKAGE_COMPATIBLE_LIST "@PROJECT_COMPATIBLE_LIST@")

INCLUDE(FindPackageMessage)
FIND_PACKAGE_MESSAGE("Checking version: izenelib ${PACKAGE_VERSION}"
  "Found izenelib of version ${PACKAGE_VERSION}, checking version"
  "${PACKAGE_VERSION}"
  )
#MESSAGE(STATUS "Found one izenelib installation of version ${PACKAGE_VERSION}: ${CMAKE_CURRENT_LIST_FILE}")

IF(PACKAGE_VERSION_MAJOR LESS PACKAGE_FIND_VERSION_MAJOR
    OR PACKAGE_VERSION_MINOR LESS PACKAGE_FIND_VERSION_MINOR
    OR PACKAGE_VERSION_PATCH LESS PACKAGE_FIND_VERSION_PATCH)
  SET(PACKAGE_VERSION_EXACT FALSE)
  SET(PACKAGE_VERSION_COMPATIBLE FALSE)
ELSEIF(PACKAGE_VERSION_MAJOR EQUAL PACKAGE_FIND_VERSION_MAJOR
    AND PACKAGE_VERSION_MINOR EQUAL PACKAGE_FIND_VERSION_MINOR
    AND PACKAGE_VERSION_PATCH EQUAL PACKAGE_FIND_VERSION_PATCH)
  SET(PACKAGE_VERSION_EXACT TRUE)
  SET(PACKAGE_VERSION_COMPATIBLE TRUE)
ELSE(PACKAGE_VERSION_MAJOR GREATER PACKAGE_FIND_VERSION_MAJOR
    OR PACKAGE_VERSION_MINOR GREATER PACKAGE_FIND_VERSION_MINOR
    OR PACKAGE_VERSION_PATCH GREATER PACKAGE_FIND_VERSION_PATCH)
  # version > request version
  SET(PACKAGE_VERSION_EXACT FALSE)
  LIST(FIND PACKAGE_COMPATIBLE_LIST ${PACKAGE_FIND_VERSION} pos)
  IF(pos LESS 0)
    SET(PACKAGE_VERSION_COMPATIBLE FALSE)
  ELSE(pos LESS 0)
    SET(PACKAGE_VERSION_COMPATIBLE TRUE)
  ENDIF(pos LESS 0)
ENDIF(PACKAGE_VERSION_MAJOR LESS PACKAGE_FIND_VERSION_MAJOR
  OR PACKAGE_VERSION_MINOR LESS PACKAGE_FIND_VERSION_MINOR
  OR PACKAGE_VERSION_PATCH LESS PACKAGE_FIND_VERSION_PATCH)

IF(NOT PACKAGE_VERSION_COMPATIBLE)
  MESSAGE(STATUS "izenelib ${PACKAGE_VERSION}: not compatible")
ELSEIF(PACKAGE_FIND_VERSION_EXACT AND NOT PACKAGE_VERSION_EXACT)
  MESSAGE(STATUS "izenelib ${PACKAGE_VERSION}: not exactly match")
ELSE(NOT PACKAGE_VERSION_COMPATIBLE)
  FIND_PACKAGE_MESSAGE("izenelib ${PACKAGE_VERSION} compatibility"
    "izenelib ${PACKAGE_VERSION}: compatible"
    "izenelib ${PACKAGE_VERSION}: compatible"
    )
ENDIF(NOT PACKAGE_VERSION_COMPATIBLE)
