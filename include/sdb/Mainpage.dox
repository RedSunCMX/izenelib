
/**
*
*	@mainpage About sdb-v2
*
*	SequentialDB
*
*       @htmlonly  <img src="SequentialDB.jpg">  @endhtmlonly
*        
*
*       SequentialDB is very important infrastructure.  On contrast to other Database, SequentialDB is a simplistic
*    	data storage. Although it doesn't support transaction and SQL, it is light,  fast and easy to use.  
*
*       It stores key-value pair, where key and value can be variable length and different types. It can support range 
*	    search and index search.  It also supports multi-thread access by thread-safe policy.
*
*       SDB was designed to be policy-based, it can use either sdb/btree, sdb/hash,
*	    tokyo-cabinet/hash, tokyo-cabinet/btree, skiplist or other data structures as
*	    underlying container in the same way.
*
*
*       For usage of these codes, please see example in source directory:
*
* 	    t_sdb.cc, policy-based example, btree,skiplist, sdb/hash, sdb/btree,tc/hash,
*            tc_btree can be choosed as underlying data structure.
*
*       t_overflow btree.cc, test overflow mechanism for btree
*
*       t_mul sdb.cc, example for multi-thread testing for sdb.
*
*       t_IndexSDB.cc, example for IndexSDB, and now it is much faster than
*            IndexSDB of sdb-v1.
*
*       t_tc.cc, t sdb1.cc, t bdb.cc in source/db-test directory, for DBs testing
*            among SDB, Tokyo Cabinet, and BekeleyDB.
*
*
*
*
*/

