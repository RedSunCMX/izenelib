diff --git a/include/am/btree/BTreeFile.h b/include/am/btree/BTreeFile.h
index ea8989c..21ea760 100644
--- a/include/am/btree/BTreeFile.h
+++ b/include/am/btree/BTreeFile.h
@@ -237,12 +237,17 @@ public:
 		if (1 != fwrite(&sfh, sizeof(sfh), 1, _dataFile)) {
 			abort();
 		}
+		cout<<_dirtyPages.size()<<endl
+		;
+		clock_t t1 = clock();
 		while( !_dirtyPages.empty() )
 		{
 			BTreeNodePtr ptr = _dirtyPages.back();
 			_dirtyPages.pop_back();
 			ptr->write(_dataFile);
 		}
+		printf("eclipse: %lf seconds\n", double(clock()- t1)/CLOCKS_PER_SEC);
+		cout<<_dirtyPages.size()<<endl;
 		fflush(_dataFile);
 		//for (BnPtrIter it=_dirtyPages.begin(); it != _dirtyPages.end(); it++)
 		//(*it)->write(_dataFile);
diff --git a/include/am/btree/BTreeNode.h b/include/am/btree/BTreeNode.h
index fc645c4..44dc3f7 100644
--- a/include/am/btree/BTreeNode.h
+++ b/include/am/btree/BTreeNode.h
@@ -310,8 +310,12 @@ template<typename KeyType, typename DataType, typename LockType, typename Alloc>
 		KeyType, DataType, LockType, Alloc>::read(FILE* f) {
 
 	long _overFlowAddress;
-	//static int _rcount;
-
+	
+#ifdef DEBUG
+	static int _rcount;
+	cout<<"reading "<<_rcount++<<endl;
+#endif
+	
 	if (!f) {
 		return false;
 	}
@@ -439,7 +443,6 @@ template<typename KeyType, typename DataType, typename LockType, typename Alloc>
 template<typename KeyType, typename DataType, typename LockType, typename Alloc> bool BTreeNode<
 		KeyType, DataType, LockType, Alloc>::write(FILE* f) {
 
-	//static int _wcount;
 
 	typedef pair<long, size_t> OverflowInfo;
 	map<size_t, OverflowInfo> _overflowMap;
@@ -460,12 +463,17 @@ template<typename KeyType, typename DataType, typename LockType, typename Alloc>
 		return false;
 	}
 
+#ifdef DEBUG
+	static int _wcount;
+	cout<<"write "<<_wcount++ <<endl;
+#endif
+	
 	if (0 != fseek(f, 0, SEEK_END)) {
 		return false;
 	}
 	_overFlowAddress = ftell(f);
 
-	//cout<<"write "<<_wcount++ <<endl;;
+	
 
 	// get to the right location
 	if (0 != fseek(f, fpos, SEEK_SET)) {
