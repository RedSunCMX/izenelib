SET(PACKAGE_VERSION "@PROJECT_VERSION@")
SET(PACKAGE_VERSION_MAJOR "@PROJECT_VERSION_MAJOR@")
SET(PACKAGE_VERSION_MINOR "@PROJECT_VERSION_MINOR@")
SET(PACKAGE_VERSION_PATCH "@PROJECT_VERSION_PATCH@")

IF (PACKAGE_VERSION_MAJOR LESS PACKAGE_FIND_VERSION_MAJOR
    OR PACKAGE_VERSION_MAJOR LESS PACKAGE_FIND_VERSION_MINOR
    OR PACKAGE_VERSION_PATCH LESS PACKAGE_FIND_VERSION_PATCH)
  SET(PACKAGE_VERSION_EXACT FALSE)
  SET(PACKAGE_VERSION_COMPATIBLE FALSE)
ELSEIF (PACKAGE_VERSION_MAJOR EQUAL PACKAGE_FIND_VERSION_MAJOR
    AND PACKAGE_VERSION_MINOR EQUAL PACKAGE_FIND_VERSION_MINOR
    AND PACKAGE_VERSION_PATCH EQUAL PACKAGE_FIND_VERSION_PATCH)
  SET(PACKAGE_VERSION_EXACT TRUE)
  SET(PACKAGE_VERSION_COMPATIBLE TRUE)
ELSE (PACKAGE_VERSION_MAJOR GREATER PACKAGE_FIND_VERSION_MAJOR
    OR PACKAGE_VERSION_MAJOR GREATER PACKAGE_FIND_VERSION_MINOR
    OR PACKAGE_VERSION_PATCH GREATER PACKAGE_FIND_VERSION_PATCH)
  # version > request version
  SET(PACKAGE_VERSION_EXACT FALSE)
  # default is not compatible
  SET(PACKAGE_VERSION_COMPATIBLE FALSE)

  # Template:
  # compatible with version >= 1.1.1
  # IF(NOT PACKAGE_FIND_VERSION_MAJOR LESS 1
  #     OR NOT PACKAGE_FIND_VERSION_MINOR LESS 1
  #     OR NOT PACKAGE_FIND_VERSION_MINOR LESS 1)
  #   SET(PACKAGE_VERSION_COMPATIBLE TRUE)
  # ENDIF(NOT PACKAGE_FIND_VERSION_MAJOR LESS 1
  #     OR NOT PACKAGE_FIND_VERSION_MINOR LESS 1
  #     OR NOT PACKAGE_FIND_VERSION_MINOR LESS 1)
ENDIF (PACKAGE_VERSION_MAJOR LESS PACKAGE_FIND_VERSION_MAJOR
  OR PACKAGE_VERSION_MAJOR LESS PACKAGE_FIND_VERSION_MINOR
  OR PACKAGE_VERSION_PATCH LESS PACKAGE_FIND_VERSION_PATCH)
